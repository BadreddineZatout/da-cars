// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Brand {
  id        Int       @id @default(autoincrement())
  name      String
  parentId  Int?
  parent    Brand?    @relation("ParentBrand", fields: [parentId], references: [id])
  subBrands Brand[]   @relation("ParentBrand")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  vehicles  Vehicle[]
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  items       Item[]
}

model Item {
  id        Int     @id @default(autoincrement())
  name      String
  price     Float
  serviceId Int
  service   Service @relation(fields: [serviceId], references: [id])
}

model Vehicle {
  id          Int              @id @default(autoincrement())
  name        String
  brandId     Int
  price       Float
  description String
  phone       String?
  address     String
  isPremium   Boolean          @default(false)
  brand       Brand            @relation(fields: [brandId], references: [id])
  media       VehicleMedia[]
  features    Feature[]
  tags        TagsOnVehicles[]
}

model Feature {
  id        Int     @id @default(autoincrement())
  name      String
  vehicleId Int
  Vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}

model Tag {
  id       Int              @id @default(autoincrement())
  name     String
  vehicles TagsOnVehicles[]
}

model TagsOnVehicles {
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId Int
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     Int
  value     String

  @@id([vehicleId, tagId])
}

model VehicleMedia {
  id        Int     @id @default(autoincrement())
  name      String
  path      String
  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}
